//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("fBaseModel", "FK_testresults_humans", "humans", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Recog.Data.human), "testresults", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Recog.Data.testresult), true)]

#endregion

namespace Recog.Data
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class fBaseEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект fBaseEntities, используя строку соединения из раздела "fBaseEntities" файла конфигурации приложения.
        /// </summary>
        public fBaseEntities() : base("name=fBaseEntities", "fBaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта fBaseEntities.
        /// </summary>
        public fBaseEntities(string connectionString) : base(connectionString, "fBaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта fBaseEntities.
        /// </summary>
        public fBaseEntities(EntityConnection connection) : base(connection, "fBaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<education> educations
        {
            get
            {
                if ((_educations == null))
                {
                    _educations = base.CreateObjectSet<education>("educations");
                }
                return _educations;
            }
        }
        private ObjectSet<education> _educations;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<genser> gensers
        {
            get
            {
                if ((_gensers == null))
                {
                    _gensers = base.CreateObjectSet<genser>("gensers");
                }
                return _gensers;
            }
        }
        private ObjectSet<genser> _gensers;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<human> humans
        {
            get
            {
                if ((_humans == null))
                {
                    _humans = base.CreateObjectSet<human>("humans");
                }
                return _humans;
            }
        }
        private ObjectSet<human> _humans;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<ranc> rancs
        {
            get
            {
                if ((_rancs == null))
                {
                    _rancs = base.CreateObjectSet<ranc>("rancs");
                }
                return _rancs;
            }
        }
        private ObjectSet<ranc> _rancs;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<testresult> testresults
        {
            get
            {
                if ((_testresults == null))
                {
                    _testresults = base.CreateObjectSet<testresult>("testresults");
                }
                return _testresults;
            }
        }
        private ObjectSet<testresult> _testresults;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<department> departments
        {
            get
            {
                if ((_departments == null))
                {
                    _departments = base.CreateObjectSet<department>("departments");
                }
                return _departments;
            }
        }
        private ObjectSet<department> _departments;

        #endregion
        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet educations. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToeducations(education education)
        {
            base.AddObject("educations", education);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet gensers. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTogensers(genser genser)
        {
            base.AddObject("gensers", genser);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet humans. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTohumans(human human)
        {
            base.AddObject("humans", human);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet rancs. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTorancs(ranc ranc)
        {
            base.AddObject("rancs", ranc);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet testresults. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTotestresults(testresult testresult)
        {
            base.AddObject("testresults", testresult);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet departments. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTodepartments(department department)
        {
            base.AddObject("departments", department);
        }

        #endregion
    }
    

    #endregion
    
    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fBaseModel", Name="department")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class department : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта department.
        /// </summary>
        /// <param name="idd">Исходное значение свойства idd.</param>
        /// <param name="description">Исходное значение свойства description.</param>
        public static department Createdepartment(global::System.Int32 idd, global::System.String description)
        {
            department department = new department();
            department.idd = idd;
            department.description = description;
            return department;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idd
        {
            get
            {
                return _idd;
            }
            set
            {
                if (_idd != value)
                {
                    OniddChanging(value);
                    ReportPropertyChanging("idd");
                    _idd = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idd");
                    OniddChanged();
                }
            }
        }
        private global::System.Int32 _idd;
        partial void OniddChanging(global::System.Int32 value);
        partial void OniddChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fBaseModel", Name="education")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class education : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта education.
        /// </summary>
        /// <param name="ide">Исходное значение свойства ide.</param>
        /// <param name="description">Исходное значение свойства description.</param>
        public static education Createeducation(global::System.Int32 ide, global::System.String description)
        {
            education education = new education();
            education.ide = ide;
            education.description = description;
            return education;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ide
        {
            get
            {
                return _ide;
            }
            set
            {
                if (_ide != value)
                {
                    OnideChanging(value);
                    ReportPropertyChanging("ide");
                    _ide = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ide");
                    OnideChanged();
                }
            }
        }
        private global::System.Int32 _ide;
        partial void OnideChanging(global::System.Int32 value);
        partial void OnideChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fBaseModel", Name="genser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class genser : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта genser.
        /// </summary>
        /// <param name="idg">Исходное значение свойства idg.</param>
        public static genser Creategenser(global::System.Int32 idg)
        {
            genser genser = new genser();
            genser.idg = idg;
            return genser;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idg
        {
            get
            {
                return _idg;
            }
            set
            {
                if (_idg != value)
                {
                    OnidgChanging(value);
                    ReportPropertyChanging("idg");
                    _idg = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idg");
                    OnidgChanged();
                }
            }
        }
        private global::System.Int32 _idg;
        partial void OnidgChanging(global::System.Int32 value);
        partial void OnidgChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fBaseModel", Name="human")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class human : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта human.
        /// </summary>
        /// <param name="idh">Исходное значение свойства idh.</param>
        /// <param name="secondname">Исходное значение свойства secondname.</param>
        public static human Createhuman(global::System.Int32 idh, global::System.String secondname)
        {
            human human = new human();
            human.idh = idh;
            human.secondname = secondname;
            return human;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idh
        {
            get
            {
                return _idh;
            }
            set
            {
                if (_idh != value)
                {
                    OnidhChanging(value);
                    ReportPropertyChanging("idh");
                    _idh = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idh");
                    OnidhChanged();
                }
            }
        }
        private global::System.Int32 _idh;
        partial void OnidhChanging(global::System.Int32 value);
        partial void OnidhChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String firstname
        {
            get
            {
                return _firstname;
            }
            set
            {
                OnfirstnameChanging(value);
                ReportPropertyChanging("firstname");
                _firstname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("firstname");
                OnfirstnameChanged();
            }
        }
        private global::System.String _firstname;
        partial void OnfirstnameChanging(global::System.String value);
        partial void OnfirstnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String secondname
        {
            get
            {
                return _secondname;
            }
            set
            {
                OnsecondnameChanging(value);
                ReportPropertyChanging("secondname");
                _secondname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("secondname");
                OnsecondnameChanged();
            }
        }
        private global::System.String _secondname;
        partial void OnsecondnameChanging(global::System.String value);
        partial void OnsecondnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String lastname
        {
            get
            {
                return _lastname;
            }
            set
            {
                OnlastnameChanging(value);
                ReportPropertyChanging("lastname");
                _lastname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("lastname");
                OnlastnameChanged();
            }
        }
        private global::System.String _lastname;
        partial void OnlastnameChanging(global::System.String value);
        partial void OnlastnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> genderid
        {
            get
            {
                return _genderid;
            }
            set
            {
                OngenderidChanging(value);
                ReportPropertyChanging("genderid");
                _genderid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("genderid");
                OngenderidChanged();
            }
        }
        private Nullable<global::System.Int32> _genderid;
        partial void OngenderidChanging(Nullable<global::System.Int32> value);
        partial void OngenderidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> rankid
        {
            get
            {
                return _rankid;
            }
            set
            {
                OnrankidChanging(value);
                ReportPropertyChanging("rankid");
                _rankid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rankid");
                OnrankidChanged();
            }
        }
        private Nullable<global::System.Int32> _rankid;
        partial void OnrankidChanging(Nullable<global::System.Int32> value);
        partial void OnrankidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> educationid
        {
            get
            {
                return _educationid;
            }
            set
            {
                OneducationidChanging(value);
                ReportPropertyChanging("educationid");
                _educationid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("educationid");
                OneducationidChanged();
            }
        }
        private Nullable<global::System.Int32> _educationid;
        partial void OneducationidChanging(Nullable<global::System.Int32> value);
        partial void OneducationidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> departmentid
        {
            get
            {
                return _departmentid;
            }
            set
            {
                OndepartmentidChanging(value);
                ReportPropertyChanging("departmentid");
                _departmentid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("departmentid");
                OndepartmentidChanged();
            }
        }
        private Nullable<global::System.Int32> _departmentid;
        partial void OndepartmentidChanging(Nullable<global::System.Int32> value);
        partial void OndepartmentidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> birthday
        {
            get
            {
                return _birthday;
            }
            set
            {
                OnbirthdayChanging(value);
                ReportPropertyChanging("birthday");
                _birthday = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("birthday");
                OnbirthdayChanged();
            }
        }
        private Nullable<global::System.DateTime> _birthday;
        partial void OnbirthdayChanging(Nullable<global::System.DateTime> value);
        partial void OnbirthdayChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String additinfo
        {
            get
            {
                return _additinfo;
            }
            set
            {
                OnadditinfoChanging(value);
                ReportPropertyChanging("additinfo");
                _additinfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("additinfo");
                OnadditinfoChanged();
            }
        }
        private global::System.String _additinfo;
        partial void OnadditinfoChanging(global::System.String value);
        partial void OnadditinfoChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fBaseModel", "FK_testresults_humans", "testresults")]
        public EntityCollection<testresult> testresults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<testresult>("fBaseModel.FK_testresults_humans", "testresults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<testresult>("fBaseModel.FK_testresults_humans", "testresults", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fBaseModel", Name="ranc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ranc : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта ranc.
        /// </summary>
        /// <param name="idr">Исходное значение свойства idr.</param>
        /// <param name="description">Исходное значение свойства description.</param>
        public static ranc Createranc(global::System.Int32 idr, global::System.String description)
        {
            ranc ranc = new ranc();
            ranc.idr = idr;
            ranc.description = description;
            return ranc;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idr
        {
            get
            {
                return _idr;
            }
            set
            {
                if (_idr != value)
                {
                    OnidrChanging(value);
                    ReportPropertyChanging("idr");
                    _idr = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idr");
                    OnidrChanged();
                }
            }
        }
        private global::System.Int32 _idr;
        partial void OnidrChanging(global::System.Int32 value);
        partial void OnidrChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="fBaseModel", Name="testresult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class testresult : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта testresult.
        /// </summary>
        /// <param name="idtr">Исходное значение свойства idtr.</param>
        /// <param name="idh">Исходное значение свойства idh.</param>
        /// <param name="testdate">Исходное значение свойства testdate.</param>
        /// <param name="testid">Исходное значение свойства testid.</param>
        /// <param name="teststream">Исходное значение свойства teststream.</param>
        /// <param name="mode">Исходное значение свойства mode.</param>
        public static testresult Createtestresult(global::System.Int32 idtr, global::System.Int32 idh, global::System.DateTime testdate, global::System.Int32 testid, global::System.String teststream, global::System.String mode)
        {
            testresult testresult = new testresult();
            testresult.idtr = idtr;
            testresult.idh = idh;
            testresult.testdate = testdate;
            testresult.testid = testid;
            testresult.teststream = teststream;
            testresult.mode = mode;
            return testresult;
        }

        #endregion
        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idtr
        {
            get
            {
                return _idtr;
            }
            set
            {
                if (_idtr != value)
                {
                    OnidtrChanging(value);
                    ReportPropertyChanging("idtr");
                    _idtr = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idtr");
                    OnidtrChanged();
                }
            }
        }
        private global::System.Int32 _idtr;
        partial void OnidtrChanging(global::System.Int32 value);
        partial void OnidtrChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idh
        {
            get
            {
                return _idh;
            }
            set
            {
                OnidhChanging(value);
                ReportPropertyChanging("idh");
                _idh = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idh");
                OnidhChanged();
            }
        }
        private global::System.Int32 _idh;
        partial void OnidhChanging(global::System.Int32 value);
        partial void OnidhChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime testdate
        {
            get
            {
                return _testdate;
            }
            set
            {
                OntestdateChanging(value);
                ReportPropertyChanging("testdate");
                _testdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("testdate");
                OntestdateChanged();
            }
        }
        private global::System.DateTime _testdate;
        partial void OntestdateChanging(global::System.DateTime value);
        partial void OntestdateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 testid
        {
            get
            {
                return _testid;
            }
            set
            {
                OntestidChanging(value);
                ReportPropertyChanging("testid");
                _testid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("testid");
                OntestidChanged();
            }
        }
        private global::System.Int32 _testid;
        partial void OntestidChanging(global::System.Int32 value);
        partial void OntestidChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String teststream
        {
            get
            {
                return _teststream;
            }
            set
            {
                OnteststreamChanging(value);
                ReportPropertyChanging("teststream");
                _teststream = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("teststream");
                OnteststreamChanged();
            }
        }
        private global::System.String _teststream;
        partial void OnteststreamChanging(global::System.String value);
        partial void OnteststreamChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String mode
        {
            get
            {
                return _mode;
            }
            set
            {
                OnmodeChanging(value);
                ReportPropertyChanging("mode");
                _mode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("mode");
                OnmodeChanged();
            }
        }
        private global::System.String _mode;
        partial void OnmodeChanging(global::System.String value);
        partial void OnmodeChanged();

        #endregion
    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("fBaseModel", "FK_testresults_humans", "humans")]
        public human human
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<human>("fBaseModel.FK_testresults_humans", "humans").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<human>("fBaseModel.FK_testresults_humans", "humans").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<human> humanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<human>("fBaseModel.FK_testresults_humans", "humans");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<human>("fBaseModel.FK_testresults_humans", "humans", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
